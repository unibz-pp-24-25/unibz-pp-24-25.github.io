<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Abstract data types on Programming project 2024-25</title>
    <link>https://unibz-pp-24-25.github.io/docs/abstractdatatypes/</link>
    <description>Recent content in Abstract data types on Programming project 2024-25</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://unibz-pp-24-25.github.io/docs/abstractdatatypes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>List</title>
      <link>https://unibz-pp-24-25.github.io/docs/abstractdatatypes/sections/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-24-25.github.io/docs/abstractdatatypes/sections/list/</guid>
      <description>&lt;h1 id=&#34;list&#34;&gt;&#xA;  List&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#list&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;The abstract data type &lt;strong&gt;list&lt;/strong&gt; simulates a &lt;a href=&#34;https://unibz-pp-24-25.github.io/docs/background/sections/set_tuple_map/#tuple&#34;&gt;tuple&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Accordingly, a list may contain &lt;em&gt;duplicates&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;A list may expose the following methods:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;isEmpty&lt;/strong&gt; is self-explanatory,&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;append&lt;/strong&gt; adds an element at the end of the list,&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;prepend&lt;/strong&gt; adds an element at the beginning of the list,&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;tail&lt;/strong&gt; returns the sub-list identical to the current one, but without its first element,&lt;/li&gt;&#xA;&lt;li&gt;etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note.&lt;/em&gt;&lt;/strong&gt; The &lt;em&gt;size&lt;/em&gt; of a list is often unbounded (as opposed to the size of an array for instance).&#xA;This can be implemented in different ways, for instance with a &lt;a href=&#34;%7b%7bref%22../../dataStructures/sections/list.md#array%22%7d%7d&#34;&gt;dynamic array&lt;/a&gt; or a &lt;a href=&#34;%7b%7bref%22../../dataStructures/sections/list.md#linkedList%22%7d%7d&#34;&gt;linked list&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Set</title>
      <link>https://unibz-pp-24-25.github.io/docs/abstractdatatypes/sections/set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-24-25.github.io/docs/abstractdatatypes/sections/set/</guid>
      <description>&lt;h1 id=&#34;set&#34;&gt;&#xA;  Set&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#set&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;The abstract data type &lt;strong&gt;set&lt;/strong&gt; simulates a (usually finite) mathematical &lt;a href=&#34;https://unibz-pp-24-25.github.io/docs/background/sections/set_tuple_map/#set&#34;&gt;set&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;A set may expose the following methods:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;add&lt;/strong&gt;: adds an element to the set if it was not present already (and returns true iff this was the case),&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;contains&lt;/strong&gt;: checks whether an element belongs to the set,&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;size&lt;/strong&gt;: returns the cardinality of the set,&lt;/li&gt;&#xA;&lt;li&gt;etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote class=&#34;book-hint danger&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Warning.&lt;/em&gt;&lt;/strong&gt;&#xA;A set provides no guarantee on the &lt;em&gt;order&lt;/em&gt; of its elements!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Associative array</title>
      <link>https://unibz-pp-24-25.github.io/docs/abstractdatatypes/sections/map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-24-25.github.io/docs/abstractdatatypes/sections/map/</guid>
      <description>&lt;h1 id=&#34;associative-array&#34;&gt;&#xA;  Associative array&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#associative-array&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;An &lt;strong&gt;associative array&lt;/strong&gt; (or &lt;strong&gt;dictionary&lt;/strong&gt; or &lt;strong&gt;map&lt;/strong&gt;) simulates a &lt;a href=&#34;https://unibz-pp-24-25.github.io/docs/background/sections/set_tuple_map/#function&#34;&gt;function&lt;/a&gt; with &lt;em&gt;finite&lt;/em&gt; domain.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;A associative array exposes at least the following methods:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;lookup&lt;/strong&gt; (or &lt;strong&gt;get&lt;/strong&gt;) takes a key as input, and returns the value for this key (if any).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;insert&lt;/strong&gt; (or &lt;strong&gt;put&lt;/strong&gt;) inserts a pair &lt;em&gt;(key, value)&lt;/em&gt;. If an entry for this key was already present, then overwrites its value.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;remove&lt;/strong&gt; (or &lt;strong&gt;delete&lt;/strong&gt;) deletes the entry for a given key (if any).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note.&lt;/em&gt;&lt;/strong&gt; Associative arrays are pervasive in programming.&#xA;Many data structures have been designed over the years whose main purpose is to implement associative arrays efficiently (notably hash maps and a variety of search trees).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
