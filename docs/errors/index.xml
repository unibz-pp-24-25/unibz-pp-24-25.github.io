<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Errors on Programming project 2024-25</title>
    <link>http://localhost:34431/docs/errors/</link>
    <description>Recent content in Errors on Programming project 2024-25</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:34431/docs/errors/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Call stack</title>
      <link>http://localhost:34431/docs/errors/sections/callstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:34431/docs/errors/sections/callstack/</guid>
      <description>&lt;h1 id=&#34;call-stack&#34;&gt;&#xA;  Call stack&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#call-stack&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;A &lt;strong&gt;call stack&lt;/strong&gt; is a &lt;a href=&#34;http://localhost:34431/docs/abstractdatatypes/sections/queue/#stack&#34;&gt;stack&lt;/a&gt; that keeps track of the methods that are active during the execution of a program.&#xA;By &amp;ldquo;active&amp;rdquo;, we mean that an execution of the method has started and has not terminated yet.&lt;/p&gt;&#xA;&lt;p&gt;When the execution of a method starts, it is &amp;ldquo;added&amp;rdquo; to the stack.&#xA;When it terminates, the method is &amp;ldquo;removed&amp;rdquo; from the stack, and control is passed back to the method that called it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exceptions</title>
      <link>http://localhost:34431/docs/errors/sections/exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:34431/docs/errors/sections/exceptions/</guid>
      <description>&lt;h1 id=&#34;exceptions&#34;&gt;&#xA;  Exceptions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exceptions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Programming languages may significantly differ in the way they support errors messages.&lt;/p&gt;&#xA;&lt;p&gt;Java relies on a mechanism called &lt;em&gt;exceptions&lt;/em&gt;.&#xA;Several other languages use exceptions, for instance C++, C#, PHP, Python or Ruby.&#xA;However, the purpose of exceptions may vary from one language to another.&lt;/p&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;An &lt;strong&gt;exception&lt;/strong&gt; is an object or data structure that stores information about an exceptional condition encountered during the execution of a program.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Checked vs unchecked</title>
      <link>http://localhost:34431/docs/errors/sections/checked/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:34431/docs/errors/sections/checked/</guid>
      <description>&lt;h1 id=&#34;checked-vs-unchecked&#34;&gt;&#xA;  Checked vs unchecked&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#checked-vs-unchecked&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;unchecked&#34;&gt;&#xA;  Unchecked exceptions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#unchecked&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The simplest type of exception in Java is called an &lt;strong&gt;unchecked&lt;/strong&gt; exception.&#xA;An unchecked exception is an instances of the native class &lt;code&gt;RuntimeException&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The class &lt;code&gt;RuntimeException&lt;/code&gt; has several native subclasses.&#xA;You may be familiar wit some of them:&#xA;&lt;code&gt;NullPointerException&lt;/code&gt;, &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;, &lt;code&gt;IllegalArgumentException&lt;/code&gt;, etc.&lt;/p&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;An unchecked exception that is not caught is &lt;em&gt;automatically rethrown&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;checked&#34;&gt;&#xA;  Checked exceptions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#checked&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In Java, an &lt;code&gt;Exception&lt;/code&gt; that is not a &lt;code&gt;RuntimeException&lt;/code&gt; is a &lt;strong&gt;checked&lt;/strong&gt; exception.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Custom exceptions</title>
      <link>http://localhost:34431/docs/errors/sections/custom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:34431/docs/errors/sections/custom/</guid>
      <description>&lt;h1 id=&#34;custom-exception&#34;&gt;&#xA;  Custom exception&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#custom-exception&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Custom exceptions can be created by extending one of Java&amp;rsquo;s native exception types.&#xA;For instance:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;WrongNumberOfRowsException&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; IllegalArgumentException {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;WrongNumberOfRowsException&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; numberOfRows) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;This sudoku grid has &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;numberOfRows&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; rows, whereas it should have 9&amp;#34;&lt;/span&gt;).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A custom exception can be &lt;a href=&#34;http://localhost:34431/docs/errors/sections/exceptions/#throw&#34;&gt;thrown&lt;/a&gt; like a regular one:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(sudokuGrid.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; 9){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; WrongNumberOfRowsException(sudokuGrid.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Observation.&lt;/em&gt;&lt;/strong&gt;&#xA;In this example, &lt;code&gt;WrongNumberOfRowsException&lt;/code&gt; extends &lt;code&gt;IllegalArgumentException&lt;/code&gt;, which extends &lt;code&gt;RuntimeException&lt;/code&gt;.&#xA;Recall that an instance of a subclass of &lt;code&gt;RuntimeException&lt;/code&gt; is &lt;a href=&#34;http://localhost:34431/docs/errors/sections/checked/#unchecked&#34;&gt;unchecked&lt;/a&gt;.&#xA;Therefore an instance of &lt;code&gt;WrongNumberOfRowsException&lt;/code&gt; is an unchecked exception.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java errors</title>
      <link>http://localhost:34431/docs/errors/sections/errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:34431/docs/errors/sections/errors/</guid>
      <description>&lt;h1 id=&#34;java-errors&#34;&gt;&#xA;  Java errors&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java-errors&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Aside from exceptions, a Java program can throw a so-called &lt;code&gt;Error&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;According to the Javadoc for the class &lt;code&gt;Error&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;An Error [&amp;hellip;] indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;For instance, some subclasses or &lt;code&gt;Error&lt;/code&gt; are &lt;code&gt;OutOfMemoryError&lt;/code&gt; and &lt;code&gt;StackOverflowError&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
