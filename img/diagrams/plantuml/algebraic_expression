@startuml
scale 750 width

interface Expression {
  int evaluate()
  int countProducts()
  int countDistinctIntegers()
  int countSubExpressions(int result)
}

interface Operation {
  Expression getFirstOperand()
  Expression getSecondOperand()
}

abstract class AbstractOperation {
  Expression firstOperand
  Expression secondOperand

  Expression getFirstOperand()
  Expression getSecondOperand()
  int countDistinctIntegers()
}

class Sum {
  int evaluate()
  int countProducts()
  int countSubExpressions(int result)
}

class Product {
  int evaluate()
  int countProducts()
  int countSubExpressions(int result)
}

class Division {
  int evaluate()
  int countProducts()
  int countSubExpressions(int result)
}

class IntegerValue {
  int evaluate()
  int countProducts()
  int countDistinctIntegers()
  int countSubExpressions(int result)
}


Expression <|.. Operation : extends

Operation <-- AbstractOperation : implements
Expression <-- IntegerValue : implements

AbstractOperation <|-- Sum : extends
AbstractOperation <|-- Product : extends
AbstractOperation <|-- Division : extends

@enduml
