<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unit tests on Programming project 2024-25</title>
    <link>https://unibz-pp-24-25.github.io/docs/unittests/</link>
    <description>Recent content in Unit tests on Programming project 2024-25</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://unibz-pp-24-25.github.io/docs/unittests/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code units</title>
      <link>https://unibz-pp-24-25.github.io/docs/unittests/sections/structured/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-24-25.github.io/docs/unittests/sections/structured/</guid>
      <description>&lt;h1 id=&#34;code-units&#34;&gt;&#xA;  Code units&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#code-units&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;A unit test is meant to test to a small unit of code.&#xA;This is only possible if the program contains small units of code.&lt;/p&gt;&#xA;&lt;p&gt;Therefore unit testing is closely related to &lt;em&gt;decomposing&lt;/em&gt; complex problems into smaller ones (and creating methods that solve these smaller problems).&lt;/p&gt;&#xA;&lt;h2 id=&#34;benefits&#34;&gt;&#xA;  Benefits&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#benefits&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Possible benefits of decomposing complex methods into smaller ones are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;readability,&lt;/li&gt;&#xA;&lt;li&gt;easier debugging,&lt;/li&gt;&#xA;&lt;li&gt;opportunities to factorize code (the same small methods can be called in several places),&lt;/li&gt;&#xA;&lt;li&gt;easier collaboration (two person modifying the same method in parallel is less likely if the method is small),&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Some good indicators that auxiliary methods may be helpful are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Development driven by unit tests</title>
      <link>https://unibz-pp-24-25.github.io/docs/unittests/sections/tdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-24-25.github.io/docs/unittests/sections/tdd/</guid>
      <description>&lt;h1 id=&#34;development-driven-by-unit-tests&#34;&gt;&#xA;  Development driven by unit tests&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#development-driven-by-unit-tests&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;Test-driven development (TDD)&lt;/strong&gt; consists in converting a program&amp;rsquo;s requirements into test cases, &lt;em&gt;before&lt;/em&gt; the program is fully developed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Note that this approach is &lt;em&gt;not&lt;/em&gt; restricted to unit tests.&lt;/p&gt;&#xA;&lt;h2 id=&#34;in-practice&#34;&gt;&#xA;  In practice&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#in-practice&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;For a &lt;em&gt;non-trivial&lt;/em&gt; method:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a method stub (e.g. &lt;code&gt;return null&lt;/code&gt; if the method&amp;rsquo;s return type is a reference type).&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://unibz-pp-24-25.github.io/docs/interfaces/sections/specification/&#34;&gt;Specify&lt;/a&gt; the expected behavior (input and expected output) of the method.&lt;/li&gt;&#xA;&lt;li&gt;Write one or several test(s) for this method, &lt;em&gt;illustrating&lt;/em&gt; the specification.&lt;/li&gt;&#xA;&lt;li&gt;Implement the method until the test(s) is (are) successful.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hint.&lt;/em&gt;&lt;/strong&gt; Your IDE can generate method stubs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>in Java</title>
      <link>https://unibz-pp-24-25.github.io/docs/unittests/sections/junit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-24-25.github.io/docs/unittests/sections/junit/</guid>
      <description>&lt;h1 id=&#34;unit-tests-in-java&#34;&gt;&#xA;  Unit tests in Java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#unit-tests-in-java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Several frameworks are available in Java for unit tests.&#xA;Popular frameworks include:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://junit.org/junit4/&#34;&gt;JUnit 4&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://junit.org/junit5/&#34;&gt;JUnit 5&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://testng.org/&#34;&gt;TestNG&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://spockframework.org/&#34;&gt;Spock&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In this section, we focus on Junit 5.&lt;/p&gt;&#xA;&lt;h2 id=&#34;install-junit-5-with-maven&#34;&gt;&#xA;  Install Junit 5 with Maven&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#install-junit-5-with-maven&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Junit 5 can be used in a Maven project by declaring the following &lt;a href=&#34;https://unibz-pp-24-25.github.io/docs/build/sections/dependencies/&#34;&gt;dependency&lt;/a&gt; and &lt;a href=&#34;https://unibz-pp-24-25.github.io/docs/build/sections/building/#installPlugin&#34;&gt;plugin&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.junit.jupiter&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;junit-jupiter&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.10.2&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-surefire-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.2.5&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the latest versions, search &lt;a href=&#34;https://mvnrepository.com&#34;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
